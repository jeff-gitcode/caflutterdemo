// Mocks generated by Mockito 5.4.0 from annotations
// in caflutterdemo/test/application/user_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:caflutterdemo/application/interface/spi/iuser_repository.dart'
    as _i3;
import 'package:caflutterdemo/domain/user_entity.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserEntity_0 extends _i1.SmartFake implements _i2.UserEntity {
  _FakeUserEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUserRepository extends _i1.Mock implements _i3.IUserRepository {
  MockIUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.UserEntity>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i4.Future<List<_i2.UserEntity>>.value(<_i2.UserEntity>[]),
      ) as _i4.Future<List<_i2.UserEntity>>);
  @override
  _i4.Future<_i2.UserEntity> getUserById({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.UserEntity>.value(_FakeUserEntity_0(
          this,
          Invocation.method(
            #getUserById,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.UserEntity>);
  @override
  _i4.Future<_i2.UserEntity> createUser({required _i2.UserEntity? user}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {#user: user},
        ),
        returnValue: _i4.Future<_i2.UserEntity>.value(_FakeUserEntity_0(
          this,
          Invocation.method(
            #createUser,
            [],
            {#user: user},
          ),
        )),
      ) as _i4.Future<_i2.UserEntity>);
  @override
  _i4.Future<_i2.UserEntity> updateUser({required _i2.UserEntity? user}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [],
          {#user: user},
        ),
        returnValue: _i4.Future<_i2.UserEntity>.value(_FakeUserEntity_0(
          this,
          Invocation.method(
            #updateUser,
            [],
            {#user: user},
          ),
        )),
      ) as _i4.Future<_i2.UserEntity>);
  @override
  _i4.Future<void> deleteUser({required String? id}) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
